version: '3.3'
services:


  # docker run -d --name redis -p 6700:6379 redis:latest
  redis:
    container_name: redis
    image: redis:latest
    ports:
      - 6700:6700
    networks:
      - backend

  minio:
    image: minio/minio
    container_name: minio
    restart: always
    ports: ["9000:9000","9001:9001"]
    entrypoint: sh
    command: -c 'mkdir -p /data/flows && minio server /data/flows --console-address ":9001"'
    volumes:
      - /home/symphony:/data
    environment:
      MINIO_REGION: ap-south-1
      MINIO_ROOT_USER: c@rpl@c@ring
      MINIO_ROOT_PASSWORD: c@rpl@c@ring
    networks:
      - backend

  controller:
    container_name: controller
    command: bash -c "python3 -u ctrl.py"
    build: .
    ports:
      - 8080:8080 
    volumes:
      - "./dags:/app/dags"
      - "./temp:/app/temp"
      - "./logs:/app/logs"
    networks:
      - backend

  api:
    container_name: api
    command: bash -c "uvicorn api:app --host 0.0.0.0 --port 5000"
    build: .
    ports:
      - 5000:5000
    volumes:
      - "./dags:/app/dags"
      - "./temp:/app/temp"
      - "./logs:/app/logs"
    networks:
      - backend


  worker:
    container_name: worker
    command: bash -c "python3 -u worker.py"
    build: .
    volumes:
      - "./dags:/app/dags"
      - "./temp:/app/temp"
      - "./logs:/app/logs"
    networks:
      - backend

networks:
  backend:
    driver: "bridge"


volumes:
  dags:
  logs:
  temp: